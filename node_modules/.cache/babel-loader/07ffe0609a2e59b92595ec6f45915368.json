{"ast":null,"code":"var _jsxFileName = \"/home/pi/Desktop/coding/challenge-Trustly/src/components/ProductCard/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ListofProducts from \"../../config/constants\";\nimport Button from \"../Button\";\nimport Select from \"../Select\";\nimport { ProductsListContainer, ProductCard, ProductDescription, ProductPrice, SelectContainer, SelectName } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductsList(props) {\n  _s();\n\n  const {\n    valueFilter\n  } = props;\n  const [size, setSize] = useState('36');\n  const [quantity, setQuantity] = useState('0');\n  const [products, setProducts] = useState([]);\n  const sizes = [36, 37, 38, 39, 40, 41, 42, 43];\n  useEffect(() => {\n    ListofProducts.get().then(response => setProducts(response.data.results));\n  }, []);\n  const filtered = products.filter(item => item.description.toLowerCase().includes(valueFilter.toLowerCase()));\n\n  const handleChosenProduct = (productId, productPrice, productDescription, productThumbUrl, productmMaxresURL, productColor) => {\n    if (!quantity || quantity === '0') {\n      alert('Please choose a quantity');\n    } else {\n      allContext.setChosenProduct({\n        id: productId,\n        description: productDescription,\n        size: size,\n        quantity: quantity,\n        price: productPrice,\n        color: productColor,\n        thumbnailURL: productThumbUrl,\n        MaxresURL: productmMaxresURL\n      });\n      history.push('/checkoutpage');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductsListContainer, {\n    children: filtered && filtered.map(product => {\n      return /*#__PURE__*/_jsxDEV(ProductCard, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.thumbnailURL,\n          alt: `Thumbnail ${product.description}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ProductDescription, {\n          children: product.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SelectContainer, {\n          children: [/*#__PURE__*/_jsxDEV(SelectName, {\n            children: \"Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"sizes\",\n            id: \"sizes\",\n            onChange: e => setSize(e.target.value),\n            children: sizes.map(size => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: size,\n                children: size\n              }, size, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SelectName, {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"quantity\",\n            id: \"quantity\",\n            onChange: e => setQuantity(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ProductPrice, {\n          children: `$ ${product.price}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleChosenProduct(product.id, product.price, product.description, product.thumbnailURL, product.maxresURL, product.color),\n          children: \"Add to cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductsList, \"4Ye8iq2nhIBjnVPU9qaAgtPxlUg=\");\n\n_c = ProductsList;\nexport default ProductsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsList\");","map":{"version":3,"sources":["/home/pi/Desktop/coding/challenge-Trustly/src/components/ProductCard/index.js"],"names":["React","useEffect","useState","ListofProducts","Button","Select","ProductsListContainer","ProductCard","ProductDescription","ProductPrice","SelectContainer","SelectName","ProductsList","props","valueFilter","size","setSize","quantity","setQuantity","products","setProducts","sizes","get","then","response","data","results","filtered","filter","item","description","toLowerCase","includes","handleChosenProduct","productId","productPrice","productDescription","productThumbUrl","productmMaxresURL","productColor","alert","allContext","setChosenProduct","id","price","color","thumbnailURL","MaxresURL","history","push","map","product","e","target","value","maxresURL"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ListofProducts from \"../../config/constants\";\nimport Button from \"../Button\";\nimport Select from \"../Select\";\nimport {\n  ProductsListContainer,\n  ProductCard,\n  ProductDescription,\n  ProductPrice,\n  SelectContainer,\n  SelectName\n} from './styles';\n\nfunction ProductsList(props) {\n  \n  const {valueFilter} = props;\n  const [size, setSize] = useState('36');\n  const [quantity, setQuantity] = useState('0');\n  const [products, setProducts] = useState([]);\n  const sizes = [36, 37, 38, 39, 40, 41, 42, 43];\n  \n  useEffect(() => {\n      ListofProducts.get().then(response => setProducts(response.data.results));\n  },[]);\n  \n  const filtered =\n  products.filter((item) =>\n    item.description.toLowerCase().includes(valueFilter.toLowerCase()),\n  );\n\n  const handleChosenProduct = (\n    productId,\n    productPrice,\n    productDescription,\n    productThumbUrl,\n    productmMaxresURL,\n    productColor,\n  ) => {\n    if (!quantity || quantity === '0') {\n      alert('Please choose a quantity');\n    } else {\n      allContext.setChosenProduct({\n        id: productId,\n        description: productDescription,\n        size: size,\n        quantity: quantity,\n        price: productPrice,\n        color: productColor,\n        thumbnailURL: productThumbUrl,\n        MaxresURL: productmMaxresURL,\n      });\n\n      history.push('/checkoutpage');\n    }\n  };\n\n  return (\n    <ProductsListContainer>\n      {filtered &&\n        filtered.map((product) => {\n          return (\n            <ProductCard key={product.id}>\n              <img\n                src={product.thumbnailURL}\n                alt={`Thumbnail ${product.description}`}\n              />\n              <ProductDescription>{product.description}</ProductDescription>\n              <SelectContainer>\n                <SelectName>Size</SelectName>\n                <Select \n                  name=\"sizes\" \n                  id=\"sizes\" \n                  onChange={e => setSize(e.target.value)}\n                >\n                  {sizes.map((size) => {\n                    return (\n                      <option key={size} value={size}>\n                        {size}\n                      </option>\n                    );\n                  })}\n                </Select>\n                <SelectName>Quantity</SelectName>\n                <Select \n                  name=\"quantity\" \n                  id=\"quantity\" \n                  onChange={e => setQuantity(e.target.value)}\n                >\n                  <option value=\"0\">0</option>\n                  <option value=\"1\">1</option>\n                </Select>\n              </SelectContainer>\n              <ProductPrice>{`$ ${product.price}`}</ProductPrice>\n              <Button\n                onClick={() =>\n                  handleChosenProduct(\n                    product.id,\n                    product.price,\n                    product.description,\n                    product.thumbnailURL,\n                    product.maxresURL,\n                    product.color,\n                  )\n                }\n              >\n                Add to cart\n              </Button>\n            </ProductCard>\n          );\n      })}\n    </ProductsListContainer>\n  );\n}\nexport default ProductsList;"]},"metadata":{},"sourceType":"module"}